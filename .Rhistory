trait_1 <- trait_1[match(dimnames(pleth_coords)[[3]],names(trait_1))]
type <- "regression"
reg.type <- "PredLine"
predictor <- csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_sz <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
dimnames(pleth_coords)
names(trait_1)
phy$tip.label
gdf <- geomorph.data.frame(pleth_gpa, phy = phy,
trait_1 = trait_1)
fit <- procD.pgls(coords ~ trait_1, phy = phy, data = gdf, print.progress = F,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
out <- geomorph:::plot.procD.lm(fit, type = type,
reg.type = reg.type,
predictor = predictor,
col = "black", xlab = xlab_overwrite,
pch = 19,
cex = allometry_pt_sz)
runApp('in_development')
trait_1
summary()
fit
shiny::runApp('in_development')
runApp('in_development')
runApp('in_development')
library(geomorph)
data(plethspecies)
trait_rx <- cbind(plethspecies$phy$tip.label,
c(1,3,1,1,3,1,2,2,1),
c("A", "A", "B", "A", "B", "B", "B", "A", "A"),
c(0.45, 0.22, 1.43, 3.79, 4.01, 0.95, 0.60, 1.32, 2.03))
colnames(trait_rx) <- c("Species", "Discrete Example Data A", "Discrete Example Data B", "Continuous Example Data")
pleth_gpa <- gpagen(plethspecies$land)
pleth_coords <- pleth_gpa$coords
phy <- plethspecies$phy
csize <- pleth_gpa$Csize
# changes
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[,this_trait]
names(trait_1) <- trait_rx[,1]
trait_1 <- trait_1[match(dimnames(pleth_coords)[[3]],names(trait_1))]
trait_1
type <- "regression"
reg.type <- "PredLine"
predictor <- csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_sz <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
gdf <- geomorph.data.frame(pleth_gpa, phy = phy,
trait_1 = trait_1)
fit <- procD.pgls(coords ~ trait_1, phy = phy, data = gdf, print.progress = F,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf$coords
plot(gdf$coords)
plot(pleth_gpa)
plot(trait_1)
fit
summary(fit)
summary(fit)$table$'Z'
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
plot(fit)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
col = color, xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
allometry_pt_sz <- 1
allometry_pt_size <- 1
source("~/Documents/Work/Projects/gmShiny-internal/testing_datasets/Allometry_script.R", echo=TRUE)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
summary(fit)
runApp('in_development')
plot(fit, type = type,
reg.type = reg.type,
#predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
predictor <- trait_rx[,this_trait]#csize # log(csize) #trait_rx[,this_trait] #
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
trait_1
trait_1 <- trait_rx[,this_trait]
names(trait_1) <- trait_rx[,1]
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = trait_1)
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
pleth_gpa <- gpagen(plethspecies$land)
pleth_coords <- pleth_gpa$coords
phy <- plethspecies$phy
csize <- pleth_gpa$Csize
# changes
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[,this_trait]
names(trait_1) <- trait_rx[,1]
type <- "regression"
reg.type <- "PredLine"
predictor <- trait_rx[,this_trait]#csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_size <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = trait_1)
fit <- procD.pgls(coords ~ trait_1, data = gdf, print.progress = F, phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
trait_1
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = as.numeric(trait_1) )
fit <- procD.pgls(coords ~ trait_1, data = gdf, print.progress = F, phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
library(geomorph)
data(plethspecies)
trait_rx <- cbind(plethspecies$phy$tip.label,
c(1,3,1,1,3,1,2,2,1),
c("A", "A", "B", "A", "B", "B", "B", "A", "A"),
c(0.45, 0.22, 1.43, 3.79, 4.01, 0.95, 0.60, 1.32, 2.03))
colnames(trait_rx) <- c("Species", "Discrete Example Data A", "Discrete Example Data B", "Continuous Example Data")
pleth_gpa <- gpagen(plethspecies$land)
pleth_coords <- pleth_gpa$coords
phy <- plethspecies$phy
csize <- pleth_gpa$Csize
# changes
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[,this_trait]
names(trait_1) <- trait_rx[,1]
if(this_trait == 4){
trait_1 <- as.numeric(trait_1)
} else { trait_1 <- as.factor(trait_1) }
type <- "regression"
reg.type <- "PredLine"
predictor <- csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_size <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = trait_1)
fit <- procD.pgls(coords ~ trait_1, data = gdf, print.progress = F, phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
trait_1
trait_1 <- trait_rx[,this_trait]
names(trait_1) <- trait_rx[,1]
trait_1
match(phy$tip.label, trait_rx[,1])
match(dimnames(plethspecies$land)[[3]], trait_rx[,1])
trait_1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),this_trait]
pleth_gpa <- gpagen(plethspecies$land)
pleth_coords <- pleth_gpa$coords
phy <- plethspecies$phy
csize <- pleth_gpa$Csize
# changes
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),this_trait]
names(trait_1) <- trait_rx[,1]
if(this_trait == 4){
trait_1 <- as.numeric(trait_1)
} else { trait_1 <- as.factor(trait_1) }
type <- "regression"
reg.type <- "PredLine"
predictor <- csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_size <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = trait_1)
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
trait_1
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),this_trait]
if(this_trait == 4){
trait_1 <- as.numeric(trait_1)
} else { trait_1 <- as.factor(trait_1) }
names(trait_1) <- dimnames(plethspecies$land)[[3]]
trait_1
colnames(trait_rx) <- c("Species", "Discrete Example Data A", "Discrete Example Data B", "Continuous Example Data")
pleth_gpa <- gpagen(plethspecies$land)
pleth_coords <- pleth_gpa$coords
phy <- plethspecies$phy
csize <- pleth_gpa$Csize
# changes
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),this_trait]
if(this_trait == 4){
trait_1 <- as.numeric(trait_1)
} else { trait_1 <- as.factor(trait_1) }
names(trait_1) <- dimnames(plethspecies$land)[[3]]
type <- "regression"
reg.type <- "PredLine"
predictor <- csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_size <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = trait_1)
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(coords = pleth_gpa$coords, phy = phy, trait_1 = trait_1)
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
trait_1[match(phy$tip.label, names(trait_1))]
trait_1
gdf <- geomorph.data.frame(coords = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy, trait_1 = trait_1[match(phy$tip.label, names(trait_1))])
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
phy$tip.label
trait_1[match(phy$tip.label, names(trait_1))]
pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])]
trait_1[match(phy$tip.label, names(trait_1))]
trait_1[match(phy$tip.label, names(trait_1))]
phy$tip.label
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = trait_1)
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(coords = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy, trait_1 = trait_1[match(phy$tip.label, names(trait_1))])
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(coords = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy, trait_to_use = trait_1[match(phy$tip.label, names(trait_1))])
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
fit <- procD.lm(coords ~ trait_to_use, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_1 = trait_1)
fit <- procD.lm(coords ~ trait_1, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_to_use = trait_1)
fit <- procD.lm(coords ~ trait_to_use, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(coords = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy, trait_to_use = trait_1[match(phy$tip.label, names(trait_1))])
fit <- procD.lm(coords ~ trait_to_use, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_to_use = trait_1)
fit <- procD.lm(coords ~ trait_to_use, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(coords_to_use = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy, trait_to_use = trait_1[match(phy$tip.label, names(trait_1))])
fit <- procD.lm(coords_to_use ~ trait_to_use, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
gdf <- geomorph.data.frame(pleth_gpa, phy = phy, trait_to_use = trait_1)
fit <- procD.lm(coords ~ trait_to_use, data = gdf, print.progress = F, #phy = phy,
iter = input.anova_perm, SS.type = as.character(input.ss_type))
summary(fit)
trait_1[match(phy$tip.label, names(trait_1))]
trait_1
names(csize)
gdf <- geomorph.data.frame(coords_to_use = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy,
trait_to_use = trait_1[match(phy$tip.label, names(trait_1))],
csize = csize[match(phy$tip.label, names(csize))])
csize <- pleth_gpa$Csize
csize <- csize[match(phy$tip.label, names(csize))]
# changes
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),this_trait]
if(this_trait == 4){
trait_1 <- as.numeric(trait_1)
} else { trait_1 <- as.factor(trait_1) }
names(trait_1) <- dimnames(plethspecies$land)[[3]]
type <- "regression"
reg.type <- "PredLine"
predictor <- csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_size <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
gdf <- geomorph.data.frame(coords_to_use = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy,
trait_to_use = trait_1[match(phy$tip.label, names(trait_1))],
csize = csize)
fit <- procD.lm(coords_to_use ~ trait_to_use,
data = gdf,
print.progress = F,
#phy = phy,
iter = input.anova_perm,
SS.type = as.character(input.ss_type))
summary(fit)
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
runApp('in_development')
plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19, cex = allometry_pt_size)
dd <- plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19,
cex = allometry_pt_size)
dd$PredLine
sort(dd$PredLine)
runApp('in_development')
# changes
this_trait <- c(2,4) # 3, 4
trait_1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),this_trait]
trait_1
trait_rx <- cbind(plethspecies$phy$tip.label,
c(1,3,1,1,3,1,2,2,1),
c("A", "A", "B", "A", "B", "B", "B", "A", "A"),
c(0.45, 0.22, 1.43, 3.79, 4.01, 0.95, 0.60, 1.32, 2.03))
colnames(trait_rx) <- c("Species", "Discrete Example Data A", "Discrete Example Data B", "Continuous Example Data")
pleth_gpa <- gpagen(plethspecies$land)
pleth_coords <- pleth_gpa$coords
phy <- plethspecies$phy
csize <- pleth_gpa$Csize
csize <- csize[match(phy$tip.label, names(csize))]
# changes
this_trait <- 4 # 3, 4
trait_1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),this_trait]
if(this_trait == 4){
trait_1 <- as.numeric(trait_1)
} else { trait_1 <- as.factor(trait_1) }
names(trait_1) <- dimnames(plethspecies$land)[[3]]
t1 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),2]
t1 <- as.factor(t1)
names(t1) <- dimnames(plethspecies$land)[[3]]
t2 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),4]
t2 <- as.factor(t2)
names(t2) <- dimnames(plethspecies$land)[[3]]
type <- "regression"
reg.type <- "PredLine"
predictor <- csize # log(csize) #trait_rx[,this_trait] #
xlab_overwrite <- colnames(trait_rx[,this_trait])
allometry_pt_size <- 1
input.anova_perm = 999 # 99
input.ss_type <- "I" # "II # "III"
gdf <- geomorph.data.frame(coords_to_use = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy,
#trait_to_use = trait_1[match(phy$tip.label, names(trait_1))],
t1 = t1, t2 = t2,
csize = csize)
fit <- procD.pgls(coords_to_use ~ t1+t2,
data = gdf,
print.progress = F,
#phy = phy,
iter = input.anova_perm,
SS.type = as.character(input.ss_type))
summary(fit)
fit <- procD.pgls(coords_to_use ~ t1+t2,
data = gdf,
print.progress = F,
phy = phy,
iter = input.anova_perm,
SS.type = as.character(input.ss_type))
summary(fit)
t2
t2 <- trait_rx[match(dimnames(plethspecies$land)[[3]], trait_rx[,1]),4]
t2 <- as.numeric(t2)
names(t2) <- dimnames(plethspecies$land)[[3]]
t1
gdf <- geomorph.data.frame(coords_to_use = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy,
#trait_to_use = trait_1[match(phy$tip.label, names(trait_1))],
t1 = t1, t2 = t2,
csize = csize)
fit <- procD.pgls(coords_to_use ~ t1+t2,
data = gdf,
print.progress = F,
phy = phy,
iter = input.anova_perm,
SS.type = as.character(input.ss_type))
summary(fit)
t1
phy$tip.label
t1 <- trait_rx[match(phy$tip.label, trait_rx[,1]),2]
t1 <- as.factor(t1)
names(t1) <- phy$tip.label
t2 <- trait_rx[match(phy$tip.label, trait_rx[,1]),4]
t2 <- as.numeric(t2)
names(t2) <- phy$tip.label
gdf <- geomorph.data.frame(coords_to_use = pleth_gpa$coords[,,match(phy$tip.label, dimnames(pleth_gpa$coords)[[3]])],
phy = phy,
#trait_to_use = trait_1[match(phy$tip.label, names(trait_1))],
t1 = t1, t2 = t2,
csize = csize)
fit <- procD.pgls(coords_to_use ~ t1+t2,
data = gdf,
print.progress = F,
phy = phy,
iter = input.anova_perm,
SS.type = as.character(input.ss_type))
summary(fit)
dd <- plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19,
cex = allometry_pt_size)
as.numeric(trait_rx[match(phy$tip.label, trait_rx[,1]),4])
predictor <- as.numeric(trait_rx[match(phy$tip.label, trait_rx[,1]),4]) # csize
dd <- plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19,
cex = allometry_pt_size)
sort(dd$PredLine)
fit <- procD.pgls(coords_to_use ~ t2+t1,
data = gdf,
print.progress = F,
phy = phy,
iter = input.anova_perm,
SS.type = as.character(input.ss_type))
summary(fit)
dd <- plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19,
cex = allometry_pt_size)
sort(dd$PredLine)
runApp('in_development')
predictor <- csize #as.numeric(trait_rx[match(phy$tip.label, trait_rx[,1]),4]) # csize
dd <- plot(fit, type = type,
reg.type = reg.type,
predictor = predictor,
#col = color,
xlab = xlab_overwrite,
pch = 19,
cex = allometry_pt_size)
sort(dd$PredLine)
dd <- plot(fit, type = type,
reg.type = reg.type,
predictor = log(predictor),
#col = color,
xlab = xlab_overwrite,
pch = 19,
cex = allometry_pt_size)
